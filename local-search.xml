<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2021年7月16日报告</title>
    <link href="/2021/07/16/2021-07-16-work/"/>
    <url>/2021/07/16/2021-07-16-work/</url>
    
    <content type="html"><![CDATA[<h1 id="2021年7月16日报告"><a href="#2021年7月16日报告" class="headerlink" title="2021年7月16日报告"></a>2021年7月16日报告</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 参数</span><br>frequency = [<span class="hljs-number">0.3e12</span>, <span class="hljs-number">0.35e12</span>, <span class="hljs-number">0.4e12</span>, <span class="hljs-number">0.45e12</span>, <span class="hljs-number">0.5e12</span>, <span class="hljs-number">0.55e12</span>, <span class="hljs-number">0.6e12</span>, <span class="hljs-number">0.65e12</span>, <span class="hljs-number">0.7e12</span>];<br>Omega = [<span class="hljs-number">0.91</span>,<span class="hljs-number">0.92</span>,<span class="hljs-number">0.93</span>,<span class="hljs-number">0.94</span>,<span class="hljs-number">0.95</span>,<span class="hljs-number">0.96</span>,<span class="hljs-number">0.97</span>,<span class="hljs-number">0.98</span>,<span class="hljs-number">0.99</span>];<br>F = <span class="hljs-number">50</span>;<br>pixel_number = <span class="hljs-number">260</span>;<br>SymmetryOrasymmetry = <span class="hljs-number">1</span>;<br>delta_H = <span class="hljs-number">0.1</span>;<br>Maximum_H = <span class="hljs-number">1.4</span>;<br>Minimum_H = <span class="hljs-number">0.1</span>;<br>n = <span class="hljs-number">3.4145</span>;<br>NA = <span class="hljs-number">0.251633851764951</span>;<br><span class="hljs-comment">% 方法是全FDTD link Matlab,初始结构随机生成</span><br><span class="hljs-comment">% 目标是单焦点</span><br>Part_Target_Fun_1 = (x1 - <span class="hljs-number">0</span>) .^ <span class="hljs-number">2</span>;<br>Part_Target_Fun_2 = (W ./ <span class="hljs-number">2</span>) .^ <span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure><h2 id="自动日志："><a href="#自动日志：" class="headerlink" title="自动日志："></a>自动日志：</h2><ul><li><p>Let us begin this process ……</p></li><li><p>参数初始化部分完成，共用时：0.0024938s</p></li><li><p>The cycle officially begins ……</p></li><li><p>Initial Fom is :-2.7618</p></li><li><p>第一次数据计算完成，共用时：66.3048s</p></li><li><p>let us optimize the algorithm now! </p></li><li><p>When the loop stops, the value of FOM is：0.092821</p></li><li><p>In this case, the efficiency of structural focusing is：</p><p>0.52581     0.49413     0.42384     0.49244     0.34014     0.45345     0.25487      0.3409     0.34631</p></li><li><p>Hold on ! We have finished the part of structural optimization ! There is one last bit of work left. </p></li><li><p>画图，共用时：0.5235s</p></li><li><p>Graph and data has been stored </p></li><li><p>最终的效率如下：<br>0.52581     0.49413     0.42384     0.49244     0.34014     0.45345     0.25487      0.3409     0.34631</p></li><li><p>我想看看，最后这次FDTD计算需要多久：410.1005s</p></li><li><p>Program finished </p></li><li><p>起始于:   2021-07-14 21:04:33</p></li><li><p>结束于:   2021-07-16 15:37:13</p></li></ul><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><ol><li><img src="\img\2021年7月16日\Real-time_changes_in_FOM.png" alt="Real-time_changes_in_FOM"></li><li><img src="\img\2021年7月16日\The_final_structure_distribution.png" alt="The_final_structure_distribution"></li><li><img src="\img\2021年7月16日\The_intensity_distribution_of_the_focal_point.png" alt="The_intensity_distribution_of_the_focal_point"></li><li><img src="\img\2021年7月16日\0.30THz.jpg" alt="0.30THz"></li><li><img src="\img\2021年7月16日\0.35THz.jpg" alt="0.35THz"></li><li><img src="\img\2021年7月16日\0.40THz.jpg" alt="0.40THz"></li><li><img src="\img\2021年7月16日\0.45THz.jpg" alt="0.45THz"></li><li><img src="\img\2021年7月16日\0.50THz.jpg" alt="0.50THz"></li><li><img src="\img\2021年7月16日\0.55THz.jpg" alt="0.45THz"></li><li><img src="\img\2021年7月16日\0.60THz.jpg" alt="0.50THz"></li><li><img src="\img\2021年7月16日\0.65THz.jpg" alt="0.45THz"></li><li><img src="\img\2021年7月16日\0.70THz.jpg" alt="0.50THz"></li><li><img src="\img\2021年7月16日\Focal_position_contrast.png" alt="Focal position contrast"></li></ol>]]></content>
    
    
    <categories>
      
      <category>工作报告</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DBS</tag>
      
      <tag>工作报告</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python——part 4</title>
    <link href="/2021/07/15/2021-07-09-python-part4/"/>
    <url>/2021/07/15/2021-07-09-python-part4/</url>
    
    <content type="html"><![CDATA[<h1 id="Python——part-3-代码规范与格式"><a href="#Python——part-3-代码规范与格式" class="headerlink" title="Python——part 3 代码规范与格式"></a>Python——part 3 代码规范与格式</h1><ul><li>请遵守，PEP 8 （Python Enhancement Proposal，PEP）</li></ul><h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><ul><li>建议每级缩进都使用四个空格，这既可提高可读性，又留下了足够的多级缩进空间；</li><li>请勿使用制表符，及产生的是有效的<code>4</code>个空格而不是一个制表符;</li></ul><h2 id="行长"><a href="#行长" class="headerlink" title="行长"></a>行长</h2><ul><li>每行不超过80字符；</li><li>注释的行长都不超过72字符；</li></ul><h2 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h2><ul><li>Python解释器根据水平缩进情况来解读代码，但不关心垂直间距。</li><li>适当使用！</li></ul>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python——part 3 代码规范与格式</title>
    <link href="/2021/07/09/2021-07-09-python-part3/"/>
    <url>/2021/07/09/2021-07-09-python-part3/</url>
    
    <content type="html"><![CDATA[<h1 id="Python——part-3-代码规范与格式"><a href="#Python——part-3-代码规范与格式" class="headerlink" title="Python——part 3 代码规范与格式"></a>Python——part 3 代码规范与格式</h1><ul><li>请遵守，PEP 8 （Python Enhancement Proposal，PEP）</li></ul><h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><ul><li>建议每级缩进都使用四个空格，这既可提高可读性，又留下了足够的多级缩进空间；</li><li>请勿使用制表符，及产生的是有效的<code>4</code>个空格而不是一个制表符;</li></ul><h2 id="行长"><a href="#行长" class="headerlink" title="行长"></a>行长</h2><ul><li>每行不超过80字符；</li><li>注释的行长都不超过72字符；</li></ul><h2 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h2><ul><li>Python解释器根据水平缩进情况来解读代码，但不关心垂直间距。</li><li>适当使用！</li></ul>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python——part 2 列表和列表操作</title>
    <link href="/2021/07/09/2021-07-09-python-part2/"/>
    <url>/2021/07/09/2021-07-09-python-part2/</url>
    
    <content type="html"><![CDATA[<h1 id="Python——part-2-列表和列表操作"><a href="#Python——part-2-列表和列表操作" class="headerlink" title="Python——part 2 列表和列表操作"></a>Python——part 2 列表和列表操作</h1><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p><strong>不如翻译成矩阵？</strong></p><ul><li><p>用方括号<code>[]</code>来表示列表，并用逗号来分隔其中的元素。对于字符串，老规矩，单双引号都可以</p></li><li><p>记住，排序是从<strong><em>0</em></strong>开始的</p></li><li>当然，你也可用<code>part1</code>的<code>.***()</code>来对列表进行调整</li><li>对于列表最后的元素，不同于<code>Matlab</code>中的<code>end</code>，荷兰人在圣诞节的时候的数学能力告诉我们，<code>-1</code>表示末尾 \^.\^，当然，他们甚至搞出了<code>-2</code>是倒数第二个这一套。</li></ul><h3 id="修改、添加和删除元素"><a href="#修改、添加和删除元素" class="headerlink" title="修改、添加和删除元素"></a>修改、添加和删除元素</h3><h4 id="修改列表元素"><a href="#修改列表元素" class="headerlink" title="修改列表元素"></a>修改列表元素</h4><p>重新赋值</p><h4 id="在列表中添加元素"><a href="#在列表中添加元素" class="headerlink" title="在列表中添加元素"></a>在列表中添加元素</h4><ul><li>在末尾添加，<code>列表名.append(添加的内容)</code></li><li>在列表中添加，<code>列表名.insert(索引编号，添加的内容)</code>，插入后，每个元素向右移动</li></ul><h4 id="从列表中删除元素"><a href="#从列表中删除元素" class="headerlink" title="从列表中删除元素"></a>从列表中删除元素</h4><h5 id="已知删除元素在列表中的位置"><a href="#已知删除元素在列表中的位置" class="headerlink" title="已知删除元素在列表中的位置"></a>已知删除元素在列表中的位置</h5><p><code>del 列表名[索引编号]</code>；</p><h5 id="从列表中删除，但是我还想拿到删除的这个值"><a href="#从列表中删除，但是我还想拿到删除的这个值" class="headerlink" title="从列表中删除，但是我还想拿到删除的这个值"></a>从列表中删除，但是我还想拿到删除的这个值</h5><p><em>方法</em><code>.pop()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">motorcycles = [<span class="hljs-string">&#x27;honda&#x27;</span>, <span class="hljs-string">&#x27;yamaha&#x27;</span>, <span class="hljs-string">&#x27;suzuki&#x27;</span>]<br>popped_motorcycle = motorcycles.pop()<br><br><span class="hljs-comment">#此时</span><br>motorcycles = [<span class="hljs-string">&#x27;honda&#x27;</span>, <span class="hljs-string">&#x27;yamaha&#x27;</span>]<br>popped_motorcycle =  <span class="hljs-string">&#x27;suzuki&#x27;</span><br><br><span class="hljs-comment">#此外，还可以用pop()删除任意位置的值</span><br>first_owned = motorcycles.pop(<span class="hljs-number">0</span>)<br>first_owned = <span class="hljs-string">&#x27;honda&#x27;</span><br></code></pre></td></tr></table></figure><h5 id="根据值删除元素"><a href="#根据值删除元素" class="headerlink" title="根据值删除元素"></a>根据值删除元素</h5><p>如果你只知道要删除的元素的值，可使用<em>方法</em><code>.remove()</code></p><p><em>方法</em><code>remove()</code> 只删除第一个指定的值。如果要删除的值可能在列表中出现多次，就需要使用循环来判断是否删除了所有这样的值</p><h3 id="组织列表"><a href="#组织列表" class="headerlink" title="组织列表"></a>组织列表</h3><h4 id="使用方法-sort-对列表进行永久性排序"><a href="#使用方法-sort-对列表进行永久性排序" class="headerlink" title="使用方法.sort()对列表进行永久性排序"></a>使用<em>方法</em><code>.sort()</code>对列表进行永久性排序</h4><h5 id="数字从小到大、字母从a–z，先大写后小写"><a href="#数字从小到大、字母从a–z，先大写后小写" class="headerlink" title="数字从小到大、字母从a–z，先大写后小写"></a>数字从小到大、字母从a–z，先大写后小写</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">cars = [<span class="hljs-string">&#x27;bmw&#x27;</span>, <span class="hljs-string">&#x27;audi&#x27;</span>, <span class="hljs-string">&#x27;toyota&#x27;</span>, <span class="hljs-string">&#x27;subaru&#x27;</span>]<br><span class="hljs-comment"># 对列表进行排序，首字母</span><br>cars.sort()<br><br>&gt; [<span class="hljs-string">&#x27;audi&#x27;</span>, <span class="hljs-string">&#x27;bmw&#x27;</span>, <span class="hljs-string">&#x27;subaru&#x27;</span>, <span class="hljs-string">&#x27;toyota&#x27;</span>]<br></code></pre></td></tr></table></figure><h5 id="数字从大到小、字母从z-a，先小写后大写"><a href="#数字从大到小、字母从z-a，先小写后大写" class="headerlink" title="数字从大到小、字母从z-a，先小写后大写"></a>数字从大到小、字母从z-a，先小写后大写</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">cars = [<span class="hljs-string">&#x27;bmw&#x27;</span>, <span class="hljs-string">&#x27;audi&#x27;</span>, <span class="hljs-string">&#x27;toyota&#x27;</span>, <span class="hljs-string">&#x27;subaru&#x27;</span>]<br><span class="hljs-comment"># 对列表进行排序，首字母</span><br>cars.sort(reverse = <span class="hljs-literal">True</span>) <span class="hljs-comment">#这里真值，1 也行</span><br><br>&gt; [<span class="hljs-string">&#x27;toyota&#x27;</span>, <span class="hljs-string">&#x27;subaru&#x27;</span>, <span class="hljs-string">&#x27;bmw&#x27;</span>, <span class="hljs-string">&#x27;audi&#x27;</span>]<br></code></pre></td></tr></table></figure><h4 id="使用函数sorted-对列表进行临时性排序"><a href="#使用函数sorted-对列表进行临时性排序" class="headerlink" title="使用函数sorted()对列表进行临时性排序"></a>使用函数<code>sorted()</code>对列表进行临时性排序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">cars = [<span class="hljs-string">&#x27;bmw&#x27;</span>, <span class="hljs-string">&#x27;audi&#x27;</span>, <span class="hljs-string">&#x27;toyota&#x27;</span>, <span class="hljs-string">&#x27;subaru&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">sorted</span>(cars)) <span class="hljs-comment">#注意这种方式并不会保存，所以想好了再用</span><br><br>&gt; [<span class="hljs-string">&#x27;audi&#x27;</span>, <span class="hljs-string">&#x27;bmw&#x27;</span>, <span class="hljs-string">&#x27;subaru&#x27;</span>, <span class="hljs-string">&#x27;toyota&#x27;</span>]<br><br><span class="hljs-comment"># 反向排序方法同上</span><br></code></pre></td></tr></table></figure><h4 id="使用方法-reverse-按照原本的排列顺序，直接永久翻转"><a href="#使用方法-reverse-按照原本的排列顺序，直接永久翻转" class="headerlink" title="使用方法.reverse()按照原本的排列顺序，直接永久翻转"></a>使用<em>方法</em><code>.reverse()</code>按照原本的排列顺序，直接永久翻转</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">cars = [<span class="hljs-string">&#x27;bmw&#x27;</span>, <span class="hljs-string">&#x27;audi&#x27;</span>, <span class="hljs-string">&#x27;toyota&#x27;</span>, <span class="hljs-string">&#x27;subaru&#x27;</span>, <span class="hljs-string">&quot;Wulin&quot;</span>, <span class="hljs-string">&#x27;DongFeng&#x27;</span>]<br><span class="hljs-built_in">print</span>(cars.reverse())<br>&gt; <span class="hljs-literal">None</span> <span class="hljs-comment"># 方法，不可以这样使用，但是，方法已经执行了</span><br><br><span class="hljs-built_in">print</span>(cars)<br>&gt; [<span class="hljs-string">&#x27;DongFeng&#x27;</span>, <span class="hljs-string">&#x27;Wulin&#x27;</span>, <span class="hljs-string">&#x27;subaru&#x27;</span>, <span class="hljs-string">&#x27;toyota&#x27;</span>, <span class="hljs-string">&#x27;audi&#x27;</span>, <span class="hljs-string">&#x27;bmw&#x27;</span>]<br></code></pre></td></tr></table></figure><h4 id="确定列表的长度"><a href="#确定列表的长度" class="headerlink" title="确定列表的长度"></a>确定列表的长度</h4><p>使用函数<code>len()</code> 可快速获悉列表的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">cars = [<span class="hljs-string">&#x27;bmw&#x27;</span>, <span class="hljs-string">&#x27;audi&#x27;</span>, <span class="hljs-string">&#x27;toyota&#x27;</span>, <span class="hljs-string">&#x27;subaru&#x27;</span>, <span class="hljs-string">&quot;Wulin&quot;</span>, <span class="hljs-string">&#x27;DongFeng&#x27;</span>]<br><span class="hljs-built_in">len</span>(cars)<br><br>&gt; <span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><h4 id="一些有意思的情况"><a href="#一些有意思的情况" class="headerlink" title="一些有意思的情况"></a>一些有意思的情况</h4><ul><li>索引值为<code>-1</code>时，即使使用时造成了长度发生变化，仍然有效；</li><li>但是，当列表为空的时候，索引值为<code>-1</code>会报错</li></ul><h3 id="遍历列表以及for循环"><a href="#遍历列表以及for循环" class="headerlink" title="遍历列表以及for循环"></a>遍历列表以及<code>for</code>循环</h3><ul><li>==注意==， <code>python</code>的<code>for</code>循环非常有意思</li></ul><p>形式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> A <span class="hljs-keyword">in</span> B:<br>命令<span class="hljs-number">1</span><br>    命令<span class="hljs-number">2</span><br>    ……<br>    <br>其余命令<br></code></pre></td></tr></table></figure><ul><li>缩进，是<code>python</code>最神奇的地方，它简化了编程。<ul><li>如果缩进表示在循环内部，否则就是在循环外</li><li>请勿随意使用缩进，会玩坏掉的~</li><li>==前往别忘了冒号，它也是循环的一部分==，另外冒号前可以存在空格</li></ul></li></ul><h3 id="创建数值列表"><a href="#创建数值列表" class="headerlink" title="创建数值列表"></a>创建数值列表</h3><ul><li><p>函数<code>range()</code>，实现从第一个值开始数，并在到达你指定的第二个值后停止，因此输出不包含第二个值！</p><ul><li><p>注意，这里是一个计数器，并不是直接生成列表</p></li><li><p>是生成第一个数到（最后一个数-1），不是到最后一个数</p></li><li><p>可以使用<code>list()</code>命令直接转换成列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">numbers = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>))<br><span class="hljs-built_in">print</span>(numbers)<br><br>&gt; [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br></code></pre></td></tr></table></figure></li><li><p>可以用第三个参数指定步长</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">even_numbers = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,<span class="hljs-number">11</span>,<span class="hljs-number">2</span>))<br><span class="hljs-built_in">print</span>(even_numbers)<br><br>&gt; [<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>]<br></code></pre></td></tr></table></figure></li><li><p>此外，我发现可以使用，方法套函数，但是不可以在函数中套方法</p></li></ul></li><li><p>一种特殊且好用的创建数字列表的方法——列表解析</p><ul><li><p>将for 循环和创建新元素的代码合并成一行，并自动附加新元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">squares = [value**<span class="hljs-number">2</span> <span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">11</span>)]<br><span class="hljs-built_in">print</span>(squares)<br><br>[<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">16</span>, <span class="hljs-number">25</span>, <span class="hljs-number">36</span>, <span class="hljs-number">49</span>, <span class="hljs-number">64</span>, <span class="hljs-number">81</span>, <span class="hljs-number">100</span>]<br></code></pre></td></tr></table></figure><ul><li>首先指定一个列表名</li><li>指定一个左方括号，并定义一个表达式，用于生成你要存储到列表中的值</li><li>接下来，编写一个for 循环，用于给表达式提供值，再加上右方括号</li><li>==注意==，没有冒号</li></ul></li></ul></li></ul><h3 id="对数字列表进行简单的数学统计"><a href="#对数字列表进行简单的数学统计" class="headerlink" title="对数字列表进行简单的数学统计"></a>对数字列表进行简单的数学统计</h3><ul><li>找到最大值：<code>max(列表名)</code></li><li>找到最小值：<code>min(列表名)</code></li><li>求和：<code>sum(列表名)</code></li></ul><h3 id="使用列表的一部分"><a href="#使用列表的一部分" class="headerlink" title="使用列表的一部分"></a>使用列表的一部分</h3><p>使用<code>:</code>，产生区间，下面展示不同的用法</p><ul><li><code>[1:4]</code>，指列表中，第2-第4个数</li><li><code>[:4]</code>，指列表中，第1-第4个数</li><li><code>[1:]</code>，指列表中，第2-最后一个数</li><li><code>[-3:]</code>，指列表中，倒数第3-最后一个数</li><li><code>[:]</code>，指列表中的全部内容</li></ul><h4 id="遍历列表中的一部分"><a href="#遍历列表中的一部分" class="headerlink" title="遍历列表中的一部分"></a>遍历列表中的一部分</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">players = [<span class="hljs-string">&#x27;charles&#x27;</span>, <span class="hljs-string">&#x27;martina&#x27;</span>, <span class="hljs-string">&#x27;michael&#x27;</span>, <span class="hljs-string">&#x27;florence&#x27;</span>, <span class="hljs-string">&#x27;eli&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Here are the first three players on my team:&quot;</span>)<br><span class="hljs-keyword">for</span> player <span class="hljs-keyword">in</span> players[:<span class="hljs-number">3</span>]:<br><span class="hljs-built_in">print</span>(player.title())<br></code></pre></td></tr></table></figure><h4 id="复制列表"><a href="#复制列表" class="headerlink" title="复制列表"></a>复制列表</h4><p>==与<code>Matlab</code>不同！==，<code>python</code>不可以直接将列表整个赋值给另一个变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 这样是不对的</span><br>A = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br>B = A <br></code></pre></td></tr></table></figure><p>这样并不会将<code>列表A</code>的值赋给<code>B</code>，而是将<code>B</code>关联到<code>变量A</code>索引的<code>列表A</code>，也就是<code>列表A</code>，同时被<code>变量A</code>和<code>变量B</code>索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 正确的复制列表方法</span><br>A = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br>B = A[:]<br></code></pre></td></tr></table></figure><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><ul><li>是一种不可修改的列表，它的值不可修改</li></ul><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 用小括号</span><br>dimensions = (<span class="hljs-number">200</span>, <span class="hljs-number">50</span>, <span class="hljs-number">11</span>, <span class="hljs-number">123</span>, <span class="hljs-number">1234</span>)<br><span class="hljs-comment"># 使用</span><br><span class="hljs-built_in">print</span>(dimensions[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><h3 id="修改元组变量"><a href="#修改元组变量" class="headerlink" title="修改元组变量"></a>修改元组变量</h3><ul><li>虽然不能修改元组的元素，但是可以修改元组的变量名</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">dimensions = (<span class="hljs-number">200</span>, <span class="hljs-number">50</span>)<br><span class="hljs-comment"># 修改</span><br>dimensions = (<span class="hljs-number">400</span>, <span class="hljs-number">100</span>)<br></code></pre></td></tr></table></figure><h3 id="遍历元组的所有值"><a href="#遍历元组的所有值" class="headerlink" title="遍历元组的所有值"></a>遍历元组的所有值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 类似列表</span><br>dimensions = (<span class="hljs-number">200</span>, <span class="hljs-number">50</span>)<br><span class="hljs-keyword">for</span> dimension <span class="hljs-keyword">in</span> dimensions:<br><span class="hljs-built_in">print</span>(dimension)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021年7月9日报告</title>
    <link href="/2021/07/09/2021-07-09-work/"/>
    <url>/2021/07/09/2021-07-09-work/</url>
    
    <content type="html"><![CDATA[<h1 id="2021年7月9日报告"><a href="#2021年7月9日报告" class="headerlink" title="2021年7月9日报告"></a>2021年7月9日报告</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 参数</span><br>frequency = [<span class="hljs-number">0.3e12</span>, <span class="hljs-number">0.35e12</span>, <span class="hljs-number">0.4e12</span>, <span class="hljs-number">0.45e12</span>, <span class="hljs-number">0.5e12</span>];<br>Omega = [<span class="hljs-number">0.95</span>,<span class="hljs-number">0.96</span>,<span class="hljs-number">0.97</span>,<span class="hljs-number">0.98</span>,<span class="hljs-number">0.99</span>];<br>F = <span class="hljs-number">50</span>;<br>pixel_number = <span class="hljs-number">260</span>;<br>SymmetryOrasymmetry = <span class="hljs-number">2</span>;<br>delta_H = <span class="hljs-number">0.1</span>;<br>Maximum_H = <span class="hljs-number">1.4</span>;<br>Minimum_H = <span class="hljs-number">0.1</span>;<br>n = <span class="hljs-number">3.4145</span>;<br>NA = <span class="hljs-number">0.251633851764951</span>;<br><span class="hljs-comment">% 方法是全FDTD link Matlab,初始结构随机生成</span><br><span class="hljs-comment">% 目标是对称双焦点</span><br>Part_Target_Fun_1_1 = (x1 - (<span class="hljs-number">0</span> - <span class="hljs-number">0</span>)) .^ <span class="hljs-number">2</span>;<br>Part_Target_Fun_1_2 = (x1 - (<span class="hljs-number">0</span> + <span class="hljs-number">7</span>)) .^ <span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure><h2 id="自动日志："><a href="#自动日志：" class="headerlink" title="自动日志："></a>自动日志：</h2><p>Let us begin this process …… </p><p>参数初始化部分完成，共用时：0.0086465s</p><p>The cycle officially begins ……</p><p>Initial Fom is :-2.9701</p><p>第一次数据计算完成，共用时：46.1671s</p><p>let us optimize the algorithm now! </p><p>When the loop stops, the value of FOM is:0.19672</p><p>In this case, the efficiency of structural focusing is0.58308   0.5584   0.52775   0.53637   0.57764</p><p>Hold on ! We have finished the part of structural optimization ! There is one last bit of work left. </p><p>画图，共用时：0.95342s</p><p>Graph and data has been stored </p><p>最终的效率如下：</p><p>0.58308   0.5584   0.52775   0.53637   0.57764</p><p>我想看看，最后这次FDTD需要多久：107.0665s</p><p>Program finished </p><p>起始于:  2021-07-06 20:08:53</p><p>结束于:  2021-07-09 11:04:28</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><ol><li><img src="\img\2021年7月9日\Real-time_changes_in_FOM.png" alt="Real-time_changes_in_FOM"></li><li><img src="\img\2021年7月9日\The_final_structure_distribution.png" alt="The_final_structure_distribution"></li><li><img src="\img\2021年7月9日\The_intensity_distribution_of_the_focal_point.png" alt="The_intensity_distribution_of_the_focal_point"></li><li><img src="\img\2021年7月9日\0.30THz.jpg" alt="0.30THz"></li><li><img src="\img\2021年7月9日\0.35THz.jpg" alt="0.35THz"></li><li><img src="\img\2021年7月9日\0.40THz.jpg" alt="0.40THz"></li><li><img src="\img\2021年7月9日\0.45THz.jpg" alt="0.45THz"></li><li><img src="\img\2021年7月9日\0.50THz.jpg" alt="0.50THz"></li><li><img src="\img\2021年7月9日\Focal_position_contrast.png" alt="Focal position contrast"></li></ol>]]></content>
    
    
    <categories>
      
      <category>工作报告</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DBS</tag>
      
      <tag>工作报告</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python——part 1 变量</title>
    <link href="/2021/07/07/2021-07-06-python-part1/"/>
    <url>/2021/07/07/2021-07-06-python-part1/</url>
    
    <content type="html"><![CDATA[<h1 id="Python——part-1"><a href="#Python——part-1" class="headerlink" title="Python——part 1"></a>Python——part 1</h1><h3 id="第一件事："><a href="#第一件事：" class="headerlink" title="第一件事："></a>第一件事：</h3><ul><li><p>输入<code>print</code>，对于输出字符串，括号内使用单引号，引号间的<code>,</code>作空格，不需要输入<code>\n</code>来表示换行，它会自动执行，但是输入<code>\n</code>后，他会自动空一行。</p></li><li><p>输出<code>input</code>，括号内作提示词</p></li></ul><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h3><ul><li>只能包含<code>数字</code> 、<code>字母</code>、<code>下划线</code></li><li>变量名不能用数字打头，其余都可以</li><li>变量名不能包含空格，尽量用<code>_</code>表示</li><li>不建议存在字母<code>o、l</code>及其大写<code>O、L</code>，因为与数字<code>0、1</code>太像;</li></ul><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p><strong>可以用单引号、也可以用双引号</strong>，这样可以让句子中不需要反义字符就输出单双引号。</p><h4 id="修改字符串的大小写"><a href="#修改字符串的大小写" class="headerlink" title="修改字符串的大小写"></a>修改字符串的大小写</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;viktor rezonv&quot;</span><br><span class="hljs-built_in">print</span>(name)<br><br><span class="hljs-comment"># 输出首字母大写</span><br><span class="hljs-built_in">print</span>(name.title())<br>&gt; Viktor Rezonv <span class="hljs-comment"># .title() 以首字母大写的方式显示每个单词，即将每个单词的首字母都改为大写</span><br><br><span class="hljs-comment"># 全体变大写</span><br><span class="hljs-built_in">print</span>(name.upper())<br>&gt; VIKTOR REZONV<br><br><span class="hljs-comment">#全体变小写</span><br><span class="hljs-built_in">print</span>(name.lower())<br>&gt; viktor rezonv<br></code></pre></td></tr></table></figure><ul><li><code>.+命令</code>表示方法，及让<code>python</code>对前面的变量执行<code>.</code>后的操作</li></ul><h4 id="合并字符串"><a href="#合并字符串" class="headerlink" title="合并字符串"></a>合并字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">first_name = <span class="hljs-string">&quot;viktor&quot;</span><br>last_name = <span class="hljs-string">&quot;rezonv&quot;</span><br>full_name = first_name + <span class="hljs-string">&quot;_&quot;</span> + last_name<br><span class="hljs-built_in">print</span>(full_name)<br><br>&gt; viktor_rezonv<br><br><span class="hljs-comment"># 此外，还可以</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello,_&quot;</span> + full_name.title() + <span class="hljs-string">&quot;!&quot;</span>)<br><br>&gt; Hello,_Viktor_Rezonv！<br></code></pre></td></tr></table></figure><h4 id="在字符串中添加制表符、换行符"><a href="#在字符串中添加制表符、换行符" class="headerlink" title="在字符串中添加制表符、换行符"></a>在字符串中添加制表符、换行符</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;\t1&#x27;</span><br>&gt;____1<br><br><span class="hljs-string">&#x27;\n_&#x27;</span><br>&gt;<br>&gt;_<br></code></pre></td></tr></table></figure><h4 id="删除空白"><a href="#删除空白" class="headerlink" title="删除空白"></a>删除空白</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">_string = <span class="hljs-string">&#x27; .Viktor Rezonv. &#x27;</span><br><span class="hljs-comment"># 仅删除字符串末尾的空白，且不覆盖原变量</span><br>_string.rstrip()<br>&gt;<span class="hljs-string">&#x27; .Viktor Rezon.&#x27;</span><br><span class="hljs-comment"># 仅删除字符串段首的空白，且不覆盖原变量</span><br>_string.lstrip()<br>&gt;<span class="hljs-string">&#x27;.Viktor Rezon. &#x27;</span><br><span class="hljs-comment"># 删除字符串前后的空白，且不覆盖原变量</span><br>_string.strip()<br>&gt;<span class="hljs-string">&#x27; .Viktor Rezon. &#x27;</span><br><span class="hljs-comment"># 若想覆盖，直接赋值给原变量</span><br></code></pre></td></tr></table></figure><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><h4 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h4><ul><li>乘方是<code>**</code>，其余无所谓</li></ul><h4 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h4><ul><li>甚至没什么可说的？？</li></ul><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><ul><li>*转字符串：<code>str()</code>，用于将其他变量类型转换成字符串</li></ul><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li><code>#</code>开始注释</li></ul>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win 快捷键备查</title>
    <link href="/2021/07/05/2021-07-05-Win%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E6%9F%A5/"/>
    <url>/2021/07/05/2021-07-05-Win%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E6%9F%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="Win-快捷键备查"><a href="#Win-快捷键备查" class="headerlink" title="Win 快捷键备查"></a>Win 快捷键备查</h1><h2 id="大量文件重命名"><a href="#大量文件重命名" class="headerlink" title="大量文件重命名"></a>大量文件重命名</h2><ul><li>选中内容，<code>Fn + F2</code>实现全体重命名+自动括号区分</li></ul><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><ul><li><code>win + shift + s</code>，点击弹窗可编辑；</li></ul><h2 id="查看剪贴板"><a href="#查看剪贴板" class="headerlink" title="查看剪贴板"></a>查看剪贴板</h2><ul><li><code>win + v</code> </li></ul><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><ul><li>微软自带输入法中，<code>u</code>，提供了输入生僻字的操作；</li><li>微软自带输入法中，<code>v</code>，提供了输入汉语数字、时间、日期和计算等的操作；</li></ul><h2 id="打开新窗口"><a href="#打开新窗口" class="headerlink" title="打开新窗口"></a>打开新窗口</h2><ul><li><code>ctrl + N</code>，在任意选中的软件界面，会打开新的窗口</li></ul><h2 id="快速创建文件夹"><a href="#快速创建文件夹" class="headerlink" title="快速创建文件夹"></a>快速创建文件夹</h2><ul><li><code>ctrl + shift + N</code></li></ul><h2 id="打开我的电脑-快速访问"><a href="#打开我的电脑-快速访问" class="headerlink" title="打开我的电脑(快速访问)"></a>打开我的电脑(快速访问)</h2><ul><li><code>win + E</code>，打开我的电脑的快速访问</li></ul><h2 id="返回桌面"><a href="#返回桌面" class="headerlink" title="返回桌面"></a>返回桌面</h2><ul><li><code>win + D</code>，快速回到桌面，类似于右下角的小条</li></ul><h2 id="快速打开软件"><a href="#快速打开软件" class="headerlink" title="快速打开软件"></a>快速打开软件</h2><ul><li><code>win + R</code>，<a href="https://blog.csdn.net/weixin_43675566/article/details/104347524">恰当设置后</a>，可以用缩写打开任何软件</li></ul><h2 id="快速分屏"><a href="#快速分屏" class="headerlink" title="快速分屏"></a>快速分屏</h2><ul><li><code>win + &lt;-</code>或<code>win + -&gt;</code>实现左右分屏</li><li>接着：<code>win + ⬆</code> 或 <code>win + ⬇</code>进一步实现$\frac{1}{4}$分屏</li></ul><h2 id="窗口最大化或者最小化"><a href="#窗口最大化或者最小化" class="headerlink" title="窗口最大化或者最小化"></a>窗口最大化或者最小化</h2><ul><li>直接<code>win + ⬆</code> 或 <code>win + ⬇</code>，注意与<a href="#快速分屏">快速分屏</a>区分</li></ul><h2 id="切换输入法"><a href="#切换输入法" class="headerlink" title="切换输入法"></a>切换输入法</h2><ul><li><code>win + 空格</code>，虽然<code>shift + ctrl</code>还能用，但是这个是可视化的</li></ul><h2 id="打开设置"><a href="#打开设置" class="headerlink" title="打开设置"></a>打开设置</h2><ul><li><code>win + I</code></li></ul><h2 id="快速创建副本"><a href="#快速创建副本" class="headerlink" title="快速创建副本"></a>快速创建副本</h2><ul><li><code>ctrl + 鼠标拖动</code></li></ul><h2 id="撤回的反向操作"><a href="#撤回的反向操作" class="headerlink" title="撤回的反向操作"></a>撤回的反向操作</h2><ul><li><code>ctrl + Y</code></li></ul><p><strong><em>其余参见<code>win + shift + /</code>(安装power toys后可用)</em></strong></p>]]></content>
    
    
    <categories>
      
      <category>快捷键</category>
      
    </categories>
    
    
    <tags>
      
      <tag>快捷键</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021年7月4日报告</title>
    <link href="/2021/07/04/2021-07-04-work/"/>
    <url>/2021/07/04/2021-07-04-work/</url>
    
    <content type="html"><![CDATA[<h1 id="2021年7月4日报告"><a href="#2021年7月4日报告" class="headerlink" title="2021年7月4日报告"></a>2021年7月4日报告</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 参数</span><br>frequency = [<span class="hljs-number">0.3e12</span>, <span class="hljs-number">0.35e12</span>, <span class="hljs-number">0.4e12</span>, <span class="hljs-number">0.45e12</span>, <span class="hljs-number">0.5e12</span>];<br>Omega = [<span class="hljs-number">0.95</span>,<span class="hljs-number">0.96</span>,<span class="hljs-number">0.97</span>,<span class="hljs-number">0.98</span>,<span class="hljs-number">0.99</span>];<br>F = <span class="hljs-number">50</span>;<br>pixel_number = <span class="hljs-number">260</span>;<br>SymmetryOrasymmetry = <span class="hljs-number">1</span>;<br>delta_H = <span class="hljs-number">0.1</span>;<br>Maximum_H = <span class="hljs-number">1.4</span>;<br>Minimum_H = <span class="hljs-number">0.1</span>;<br>n = <span class="hljs-number">3.4145</span>;<br>NA = <span class="hljs-number">0.251633851764951</span>;<br><span class="hljs-comment">% 方法是全FDTD link Matlab,初始结构随机生成</span><br><span class="hljs-comment">% 目标是对称双焦点</span><br>Part_Target_Fun_1_1 = (x1 - (<span class="hljs-number">0</span> - <span class="hljs-number">2.5</span>)) .^ <span class="hljs-number">2</span>;<br>Part_Target_Fun_1_2 = (x1 - (<span class="hljs-number">0</span> + <span class="hljs-number">2.5</span>)) .^ <span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure><h2 id="自动日志："><a href="#自动日志：" class="headerlink" title="自动日志："></a>自动日志：</h2><p>Let us begin this process ……<br>参数初始化部分完成，共用时：0.0020764s<br>The cycle officially begins ……<br>Initial Fom is :-2.4344<br>第一次数据计算完成，共用时：39.7861s<br>let us optimize the algorithm now!<br>0.1808<br>0.58101     0.56479     0.53784     0.58297     0.52538<br>Hold on ! We have finished the part of structural optimization ! There is one last bit of work left.<br>画图，共用时：0.32285s<br>Graph and data has been stored<br>最终的效率如下：<br>0.58101     0.56479     0.53784     0.58297     0.52538</p><p>Program finished<br>起始于:   2021-07-03 21:58:09</p><p>结束于:   2021-07-04 17:13:57</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><ol><li><img src="\img\2021年7月4日\Real-time_changes_in_FOM.png" alt="Real-time_changes_in_FOM"></li><li><img src="\img\2021年7月4日\The_final_structure_distribution.png" alt="The_final_structure_distribution"></li><li><img src="\img\2021年7月4日\The_intensity_distribution_of_the_focal_point.png" alt="The_intensity_distribution_of_the_focal_point"></li><li><img src="\img\2021年7月4日\0.30THz.jpg" alt="0.30THz"></li><li><img src="\img\2021年7月4日\0.35THz.jpg" alt="0.35THz"></li><li><img src="\img\2021年7月4日\0.40THz.jpg" alt="0.40THz"></li><li><img src="\img\2021年7月4日\0.45THz.jpg" alt="0.45THz"></li><li><img src="\img\2021年7月4日\0.50THz.jpg" alt="0.50THz"></li><li><img src="\img\2021年7月4日\Focal_position_contrast.png" alt="Focal position contrast"></li></ol>]]></content>
    
    
    <categories>
      
      <category>工作报告</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DBS</tag>
      
      <tag>工作报告</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021年7月3日报告</title>
    <link href="/2021/07/03/2021-07-03-work/"/>
    <url>/2021/07/03/2021-07-03-work/</url>
    
    <content type="html"><![CDATA[<h1 id="2021年7月3日报告"><a href="#2021年7月3日报告" class="headerlink" title="2021年7月3日报告"></a>2021年7月3日报告</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 参数</span><br>frequency = [<span class="hljs-number">0.3e12</span>, <span class="hljs-number">0.35e12</span>, <span class="hljs-number">0.4e12</span>, <span class="hljs-number">0.45e12</span>, <span class="hljs-number">0.5e12</span>];<br>Omega = [<span class="hljs-number">0.95</span>,<span class="hljs-number">0.96</span>,<span class="hljs-number">0.97</span>,<span class="hljs-number">0.98</span>,<span class="hljs-number">0.99</span>];<br>F = <span class="hljs-number">50</span>;<br>pixel_number = <span class="hljs-number">260</span>;<br>SymmetryOrasymmetry = <span class="hljs-number">1</span>;<br>delta_H = <span class="hljs-number">0.1</span>;<br>Maximum_H = <span class="hljs-number">1.4</span>;<br>Minimum_H = <span class="hljs-number">0.1</span>;<br>n = <span class="hljs-number">3.4145</span>;<br>NA = <span class="hljs-number">0.251633851764951</span>;<br><span class="hljs-comment">% 方法是全FDTD link Matlab,初始结构随机生成</span><br></code></pre></td></tr></table></figure><h2 id="自动日志："><a href="#自动日志：" class="headerlink" title="自动日志："></a>自动日志：</h2><p>Let us begin this process ……<br>参数初始化部分完成，共用时：0.007717s<br>The cycle officially begins ……<br>Initial Fom is :-2.4418<br>第一次数据计算完成，共用时：45.3961s<br>let us optimize the algorithm now!<br>0.33453<br>0.51928     0.42452     0.55311     0.56111     0.50599<br>Hold on ! We have finished the part of structural optimization ! There is one last bit of work left.<br>画图，共用时：0.24591s<br>Graph and data has been stored<br>最终的效率如下：<br>0.51928     0.42452     0.55311     0.56111     0.50599</p><p>Program finished<br>起始于:   2021-07-02 10:26:33</p><p>结束于:   2021-07-03 18:16:39</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><ol><li>FOM图丢失，代码问题，已修复，下次会保留……</li><li><img src="\img\2021年7月3日\The_final_structure_distribution.png" alt="The_final_structure_distribution"></li><li><img src="\img\2021年7月3日\The_intensity_distribution_of_the_focal_point.png" alt="The_intensity_distribution_of_the_focal_point"></li><li><img src="\img\2021年7月3日\0.30THz.jpg" alt="0.30THz"></li><li><img src="\img\2021年7月3日\0.35THz.jpg" alt="0.35THz"></li><li><img src="\img\2021年7月3日\0.40THz.jpg" alt="0.40THz"></li><li><img src="\img\2021年7月3日\0.45THz.jpg" alt="0.45THz"></li><li><img src="\img\2021年7月3日\0.50THz.jpg" alt="0.50THz"></li><li><img src="\img\2021年7月3日\Focal_position_contrast.png" alt="Focal position contrast"></li></ol>]]></content>
    
    
    <categories>
      
      <category>工作报告</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DBS</tag>
      
      <tag>工作报告</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VS code 快捷键备查</title>
    <link href="/2021/07/02/2021-07-02-VS-code-%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E6%9F%A5/"/>
    <url>/2021/07/02/2021-07-02-VS-code-%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E6%9F%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="VS-code-快捷键备查"><a href="#VS-code-快捷键备查" class="headerlink" title="VS code 快捷键备查"></a>VS code 快捷键备查</h1><ul><li>万能键：<code>ctrl + shift + P</code>或者<code>F1</code></li><li>文件切换：<code>ctrl + P</code></li><li>自动跳转到定义：<code>ctrl + 鼠标左键</code></li><li>跳转到输入的行号：<code>ctrl + G</code></li><li>全行自动注释：<code>ctrl + /</code></li><li>调出终端：<code>CTRL+~</code> </li><li>在终端运行<code>python</code>：全选代码 -&gt; <code>shift + enter</code></li></ul><h2 id="代码编辑器"><a href="#代码编辑器" class="headerlink" title="代码编辑器"></a>代码编辑器</h2><h3 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h3><ul><li>行代码左右缩进： <code>ctrl + [</code>、<code>ctrl + ]</code>;</li><li>代码格式化：<code>Shift + Alt + F</code></li></ul><h3 id="复制和行调整"><a href="#复制和行调整" class="headerlink" title="复制和行调整"></a>复制和行调整</h3><ul><li>整行向上向下移动（不需要选中）：<code>Alt + 上键</code>、<code>Alt + 下键</code>；</li><li>整行向上向下复制（不需要选中）：<code>Shift+Alt+上键</code>、<code>Shift+Alt+下键</code></li><li>当前行上下插入一行空行：<code>Ctrl + Enter</code>、<code>Ctrl + Shift + Enter</code></li></ul><h3 id="光标相关"><a href="#光标相关" class="headerlink" title="光标相关"></a>光标相关</h3><ul><li>删除光标右侧的所有内容：<code>Ctrl+Delete</code></li><li>删除光标左侧的所有内容：<code>Ctrl+back</code></li><li>向右或者向左扩展选取的内容：<code>Ctrl + Shift + 方向右键（或左键）</code></li><li>同时选中所有匹配的内容（白色框框）：<code>Ctrl + Shift + L</code></li><li>下一个匹配的也选中：<code>Ctrl + D</code></li><li>回退到上一个光标操作：<code>Ctrl + U</code></li></ul><h3 id="查找和替换"><a href="#查找和替换" class="headerlink" title="查找和替换"></a>查找和替换</h3><ul><li>查找：<code>Ctrl+ F</code></li><li>查找替换：<code>Ctrl + H</code></li></ul><p><strong><u>更进阶再议</u></strong></p>]]></content>
    
    
    <categories>
      
      <category>快捷键</category>
      
    </categories>
    
    
    <tags>
      
      <tag>快捷键</tag>
      
      <tag>VS code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2021年7月2日报告</title>
    <link href="/2021/07/02/2021-07-02-work/"/>
    <url>/2021/07/02/2021-07-02-work/</url>
    
    <content type="html"><![CDATA[<h1 id="2021年7月2日报告"><a href="#2021年7月2日报告" class="headerlink" title="2021年7月2日报告"></a>2021年7月2日报告</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 参数</span><br>frequency = [<span class="hljs-number">0.3e12</span>,<span class="hljs-number">0.4e12</span>];<br>Omega = [<span class="hljs-number">0.99</span>,<span class="hljs-number">0.99</span>];<br>F = <span class="hljs-number">50</span>;<br>pixel_number = <span class="hljs-number">260</span>;<br>SymmetryOrasymmetry = <span class="hljs-number">1</span>;<br>delta_H = <span class="hljs-number">0.1</span>;<br>Maximum_H = <span class="hljs-number">1.4</span>;<br>Minimum_H = <span class="hljs-number">0.1</span>;<br>n = <span class="hljs-number">3.4145</span>;<br>NA = <span class="hljs-number">0.251633851764951</span>;<br><span class="hljs-comment">% 方法是全FDTD link Matlab,初始结构随机生成</span><br></code></pre></td></tr></table></figure><h2 id="自动日志："><a href="#自动日志：" class="headerlink" title="自动日志："></a>自动日志：</h2><p>Let us begin this process ……<br>参数初始化部分完成，共用时：0.007964s<br>The cycle officially begins ……<br>-3.3497<br>第一次数据计算完成，共用时：33.3633s<br>let us optimize the algorithm now!<br>-0.0030054<br>0.38224     0.37965<br>Hold on ! We have finished the part of structural optimization ! There is one last bit of work left.<br>画图，共用时：0.1592s<br>最终的效率如下：<br>0.38224     0.37965</p><p>Program finished<br>起始于：   2021-06-28 23:23:17</p><p>结束于:   2021-06-29 19:32:19</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><ol><li><p>FOM图丢失，应该是我关掉了。。。</p></li><li><p><img src="\img\2021年7月2日\The_final_structure_distribution.png" alt="The_final_structure_distribution"></p></li><li><p><img src="\img\2021年7月2日\The_intensity_distribution_of_the_focal_point.png" alt="The_intensity_distribution_of_the_focal_point"></p></li><li><p><img src="\img\2021年7月2日\0.3THz.jpg" alt="0.3THz"></p></li><li><p><img src="\img\2021年7月2日\0.4THz.jpg" alt="0.4THz"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>工作报告</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DBS</tag>
      
      <tag>工作报告</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown 入门教程</title>
    <link href="/2021/06/25/2021-06-28-markdown/"/>
    <url>/2021/06/25/2021-06-28-markdown/</url>
    
    <content type="html"><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>严格模式的作用是：在开启严格模式的时候，<code>#\quad文字</code>才会被认为是标题命令</p><h1 id="文字格式操作"><a href="#文字格式操作" class="headerlink" title="文字格式操作"></a>文字格式操作</h1><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这就是 ~~删除线~~ 的效果，使用方法~~文字~~<br></code></pre></td></tr></table></figure><p>比如，<del>这段话不要了</del></p><h2 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这就是 <span class="hljs-emphasis">*斜体*</span> 的效果，使用方法是<span class="hljs-emphasis">*文字*</span>（ctrl+I也行）<br></code></pre></td></tr></table></figure><p>比如，众所周知表示坐标的字母<em>xyz</em>需要用斜体表示</p><h2 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这就是<span class="hljs-strong">**加粗**</span>的效果，使用方法是<span class="hljs-strong">**文字**</span>（ctrl+B也行）<br></code></pre></td></tr></table></figure><p>比如，众所周知<strong>题目</strong>是要加粗的</p><h2 id="斜体加粗呢？"><a href="#斜体加粗呢？" class="headerlink" title="斜体加粗呢？"></a>斜体加粗呢？</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这就是<span class="hljs-strong">**<span class="hljs-emphasis">*斜体+加粗<span class="hljs-strong">**<span class="hljs-emphasis">*的效果，使用方法是<span class="hljs-strong">**<span class="hljs-emphasis">*文字<span class="hljs-strong">**<span class="hljs-emphasis">*（ctrl+B，ctrl+I也行）</span></span></span></span></span></span></span></span><br></code></pre></td></tr></table></figure><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown">有两种下划线的方式：<br><span class="hljs-section">#第一种</span><br><span class="hljs-code">&lt;u&gt;文字&lt;/u&gt;</span><br><span class="hljs-code">#第二种</span><br><span class="hljs-code">输入完文字后 -&gt; ctrl + u (note:建议先空格在按键) </span><br></code></pre></td></tr></table></figure><p>比如，第一种<u>文字</u>;</p><p>​           第二种<u>文字</u></p><h2 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这就是==高亮==的效果，使用方法是==文字==<br></code></pre></td></tr></table></figure><p>比如，==缩写的含义==是需要高亮一下的</p><h2 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这就是上标^[1]^的效果，使用方法与\latex类似，是用两个^框住文字<br></code></pre></td></tr></table></figure><p>比如，上标^[1]^</p><h2 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这就是下标~1~的效果，使用方法是用两个~框住文字<br></code></pre></td></tr></table></figure><p>比如，下标~1~</p><h2 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span></span>嘿嘿<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">center</span>&gt;</span></span><br></code></pre></td></tr></table></figure><center>嘿嘿</center><h2 id="表情符号"><a href="#表情符号" class="headerlink" title="表情符号"></a>表情符号</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs markdown">:smile:    :+1::kiss:<br>:laughing::-1::pray:<br>:dizzy<span class="hljs-emphasis">_face::100::sweat_</span>drops:<br>:sob:    :clap::hankey:<br>:cold<span class="hljs-emphasis">_sweat::bell::exclamation:</span><br><span class="hljs-emphasis">:sweat_</span>smile::gift::anger:<br>:cry:    :question:<br>:triumph::bomb:<br>:heart<span class="hljs-emphasis">_eyes::heart:</span><br><span class="hljs-emphasis">:relaxed::coffee:</span><br><span class="hljs-emphasis">:sunglasses::cyclone:</span><br><span class="hljs-emphasis">:weary::bow:</span><br></code></pre></td></tr></table></figure><p>:smile:                                  :+1:                                 :kiss:</p><p>:laughing:                                :-1:                            :pray:</p><p>:dizzy_face:                                :100:                            :sweat_drops:</p><p>:sob:                                :clap:                            :hankey:</p><p>:cold_sweat:                                :bell:                              :exclamation:</p><p>:sweat_smile:                                :gift:                            :anger:</p><p>:cry:                                :question:                                </p><p>:triumph:                                :bomb:</p><p>:heart_eyes:                                :heart:</p><p>:relaxed:                                :coffee:</p><p>:sunglasses:                                :cyclone:    </p><p>:weary:                                :bow:</p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>使用<code>|</code>来分隔不同的单元格，使用<code>-</code>来分割表头和其他行：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown">比如：<br>name | price<br>--- | ---<br>fried chicken | 19<br>cola | 5<br></code></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>name</th><th>price</th></tr></thead><tbody><tr><td>fried chicken</td><td>19</td></tr><tr><td>cola</td><td>5</td></tr></tbody></table></div><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">使用ctrl + <span class="hljs-built_in">t</span> 来呼出命令，设置行列数<br></code></pre></td></tr></table></figure><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">使用:对表格的对齐方式进行设计<br>为了代码美观，加上了空格，对于结果编译没有影响<br>比如：<br>|<span class="hljs-string"> name          </span>|<span class="hljs-string"> price </span>|<span class="hljs-string"> number </span>|<br>|<span class="hljs-string"> :-            </span>|<span class="hljs-string"> :-:   </span>|<span class="hljs-string"> -:     </span>|<br>|<span class="hljs-string"> fried chicken </span>|<span class="hljs-string"> 19    </span>|<span class="hljs-string"> 1      </span>|<br>|<span class="hljs-string"> cola          </span>|<span class="hljs-string"> 5     </span>|<span class="hljs-string"> 1      </span>|<br></code></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">name</th><th style="text-align:center">price</th><th style="text-align:right">number</th></tr></thead><tbody><tr><td style="text-align:left">fried chicken</td><td style="text-align:center">19</td><td style="text-align:right">1</td></tr><tr><td style="text-align:left">cola</td><td style="text-align:center">5</td><td style="text-align:right">1</td></tr></tbody></table></div><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-quote">&gt; 文字</span><br>&gt;&gt; 嵌套引用<br></code></pre></td></tr></table></figure><blockquote><p>站在风口上，猪都能飞上天</p><blockquote><p>飞上天</p></blockquote></blockquote><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">可以使用<span class="hljs-code">`*`</span>作为标记<br>也可以使用 <span class="hljs-code">`+`</span> <br>或者 <span class="hljs-code">`-`</span><br>别忘了加空格<br></code></pre></td></tr></table></figure><p>比如：</p><ul><li>这个是使用<code>*</code>作为标记；</li></ul><ul><li>也可以使用<code>+</code>；</li><li>或者<code>-</code>；</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">有序列表以数字和 <span class="hljs-code">`.`</span> 开始<br>数字的序列并不会影响生成的列表序列<br>但仍然推荐按照自然顺序（1.2.3……）编写<br></code></pre></td></tr></table></figure><ol><li>讲道理这个没有OneNote方便</li><li>不管怎么说这个不自由</li><li>哈哈</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">可以使用：数字 \. 来取消显示为列表（反斜杠老阴阳师了）<br></code></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[Fom, I_F, T]</span> = <span class="hljs-title">Fom_group</span><span class="hljs-params">(Hight, pixel_number, Width, G, x, n, F, Diameter, Lambda)</span> </span><br><span class="hljs-built_in">plot</span>(Fom)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">shift + ctrl + k 在输入命令就行，注意填选语言可以使命令高亮<br></code></pre></td></tr></table></figure><h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">例如 <span class="hljs-code">`文字`</span> 来实现行内代码的编写<br></code></pre></td></tr></table></figure><p><code>markdown</code></p><p><code>\latex</code></p><p>==转换规则是代码块中的文本，都不会被编译而显示为原来的样子==</p><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">在一行中输入三个或以上的 <span class="hljs-emphasis">* 或 - 或 _ 来显示分隔线</span><br></code></pre></td></tr></table></figure><hr><hr><hr><h1 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h1><h2 id="外链"><a href="#外链" class="headerlink" title="外链"></a>外链</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">格式为 [<span class="hljs-string">链接名</span>](<span class="hljs-link">地址</span>)<br></code></pre></td></tr></table></figure><p>比如：</p><p><a href="https://www.bilibili.com/"> 哔哩哔哩 </a></p><p>==想要打开这个地址，请按住 <code>ctrl</code> 并点击打开</p><h2 id="内链"><a href="#内链" class="headerlink" title="内链"></a>内链</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">格式为： [<span class="hljs-string">链接名</span>](<span class="hljs-link">#标题名</span>)<br></code></pre></td></tr></table></figure><p>比如：</p><p><a href="#文字格式操作">文字格式操作</a></p><h2 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h2><p>使用<code>&lt;&gt;</code>包住的URL或者邮箱会自动转化为超链接</p><p>比如：</p><p><a href="&#x6d;&#x61;&#x69;&#x6c;&#116;&#x6f;&#58;&#x73;&#x78;&#104;&#55;&#x33;&#53;&#x31;&#56;&#x31;&#51;&#x36;&#53;&#64;&#111;&#117;&#x74;&#108;&#111;&#x6f;&#x6b;&#46;&#99;&#x6f;&#x6d;">&#x73;&#x78;&#104;&#55;&#x33;&#53;&#x31;&#56;&#x31;&#51;&#x36;&#53;&#64;&#111;&#117;&#x74;&#108;&#111;&#x6f;&#x6b;&#46;&#99;&#x6f;&#x6d;</a></p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![<span class="hljs-string">图名</span>](<span class="hljs-link">图片地址，可以是网址的链接图片,或者放在同一个文件夹的图，或者直接拖进来</span>) <br>注意：中间不要有空格<br></code></pre></td></tr></table></figure><p>比如</p><p><img src="/img/Rezonv.jpg" alt="俄语：Виктор Рэзнов，英语：Viktor Reznov"></p>]]></content>
    
    
    <categories>
      
      <category>markdown</category>
      
    </categories>
    
    
    <tags>
      
      <tag>markdown</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/06/24/hello-world/"/>
    <url>/2021/06/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
